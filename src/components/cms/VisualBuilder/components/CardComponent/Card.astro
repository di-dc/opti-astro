---
import {
    CardComponentFragment,
    DisplaySettingsFragment,
} from '../../../../../services/graphql/__generated/sdk';
import { ContentPayload } from '../../../../../services/shared/ContentPayload';
export interface Props {
    data: CardComponentFragment;
    displaySettings: DisplaySettingsFragment[];
    displayTemplateKey: string;
    contentPayload: ContentPayload;
}
const { data } = Astro.props as Props;
const imageUrl = data.CoverImage?.url.default || null;
---

{
    data.DisplayAs === 'textOnHover' && (
        <a href="#" class="group relative block h-96 bg-black">
            <img
                alt=""
                src={imageUrl}
                class="absolute inset-0 h-full w-full object-cover opacity-75 transition-opacity group-hover:opacity-50"
            />

            <div class="relative p-4 sm:p-6 lg:p-8">
                <p class="text-sm font-medium tracking-widest text-pink-500 uppercase">
                    {data.Heading}
                </p>

                <p class="text-xl font-bold text-white sm:text-2xl">
                    {data.Subheading}
                </p>

                <div class="mt-20 sm:mt-36 lg:mt-48">
                    <div class="translate-y-8 transform opacity-0 transition-all group-hover:translate-y-0 group-hover:opacity-100">
                        <p class="text-lg text-white">{data.OverlayText}</p>
                    </div>
                </div>
            </div>
        </a>
    )
}
{
    data.DisplayAs === 'textBelowCard' && (
        <a href="#" class="block">
            <img
                alt=""
                src={imageUrl}
                class="h-64 w-full object-cover sm:h-80 lg:h-96"
            />

            <h3 class="mt-4 text-6xl font-bold text-gray-900">
                {data.Heading}
            </h3>

            <p class="mt-2 max-w-sm text-2xl text-gray-700">
                {data.OverlayText}
            </p>
        </a>
    )
}
{
    data.DisplayAs === 'textOnLeft' && (
        <section class="overflow-hidden bg-gray-50 sm:grid sm:grid-cols-2">
            <div class="p-8 md:p-12 lg:px-16 lg:py-24">
                <div class="mx-auto max-w-xl text-center ltr:sm:text-left rtl:sm:text-right">
                    <h2 class="text-5xl font-bold text-gray-900 md:text-5xl">
                        {data.Heading}
                    </h2>

                    <p class="hidden text-gray-500 md:mt-4 md:block">
                        {data.OverlayText}
                    </p>

                    <div class="mt-4 md:mt-8">
                        <a
                            href={data.CallToAction?.url?.default}
                            class="inline-block rounded bg-emerald-600 px-12 py-3 text-sm font-medium text-white transition hover:bg-emerald-700 focus:ring focus:ring-yellow-400 focus:outline-none"
                        >
                            {data.CallToAction?.text}
                        </a>
                    </div>
                </div>
            </div>

            <img
                alt=""
                src={data.CoverImage?.url?.default}
                class="h-56 w-full object-cover sm:h-full"
            />
        </section>
    )
}

{
    data.DisplayAs === 'textOnRight' && (
        <section class="overflow-hidden bg-gray-50 sm:grid sm:grid-cols-2">
            <img
                alt=""
                src={data.CoverImage?.url?.default}
                class="h-56 w-full object-cover sm:h-full"
            />
            <div class="p-8 md:p-12 lg:px-16 lg:py-24">
                <div class="mx-auto max-w-xl text-center ltr:sm:text-left rtl:sm:text-right">
                    <h2 class="text-5xl font-bold text-gray-900 md:text-5xl">
                        {data.Heading}
                    </h2>

                    <p class="hidden text-gray-500 md:mt-4 md:block">
                        {data.OverlayText}
                    </p>

                    <div class="mt-4 md:mt-8">
                        <a
                            href={data.CallToAction?.url?.default}
                            class="inline-block rounded bg-emerald-600 px-12 py-3 text-sm font-medium text-white transition hover:bg-emerald-700 focus:ring focus:ring-yellow-400 focus:outline-none"
                        >
                            {data.CallToAction?.text}
                        </a>
                    </div>
                </div>
            </div>
        </section>
    )
}

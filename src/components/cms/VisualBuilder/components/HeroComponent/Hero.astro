---
import { Image } from 'astro:assets';
import {
    DisplaySettingsFragment,
    HeroComponentFragment,
} from '../../../../../services/graphql/__generated/sdk';
import { ContentPayload } from '../../../../../services/shared/ContentPayload';
export interface Props {
    data: HeroComponentFragment;
    displaySettings: DisplaySettingsFragment[];
    contentPayload: ContentPayload;
}
const { data } = Astro.props as Props;
const videoUrl = data.Video?.url.default || null;
const imageUrl = data.Image?.url.default || null;
const hasVideo = videoUrl !== null;
---

<!--
  Heads up! ðŸ‘‹

  This component comes with some `rtl` classes. Please remove them if they are not needed in your project.
-->
<section class="relative w-full overflow-hidden text-white">
    <!-- Video Background -->
    {
        hasVideo && (
            <video
                autoplay
                muted
                loop
                class="absolute inset-0 w-full object-cover"
            >
                <source src={videoUrl} type="video/mp4" />
                Your browser does not support the video tag.
            </video>
        )
    }
    <!-- Image Background -->
    {
        imageUrl && !hasVideo && (
            <Image
                alt="Hero"
                src={imageUrl}
                class="absolute inset-0 w-full object-cover"
                inferSize={true}
            />
        )
    }
    <!-- Overlay -->
    <div class="absolute inset-0 bg-black opacity-50"></div>

    <!-- Content Overlay -->
    <div
        class="relative z-10 flex flex-col items-center justify-center p-16 text-center"
    >
        {
            data.Heading && (
                <h1 class="mb-4 text-4xl font-bold md:text-6xl">
                    {data.Heading}
                </h1>
            )
        }
        {
            data.SubHeading && (
                <p class="mb-8 max-w-2xl text-lg md:text-xl">
                    {data.SubHeading}
                </p>
            )
        }
        {
            data.RichText && (
                <div
                    class="mb-8 max-w-2xl text-sm"
                    set:html={data.RichText.html}
                />
            )
        }
        {
            data.CallToAction.url && (
                <a
                    href={data.CallToAction.url.default}
                    class="rounded-lg bg-blue-600 px-6 py-3 font-semibold text-white shadow-lg transition duration-300 hover:bg-blue-700"
                >
                    {data.CallToAction.text}
                </a>
            )
        }
    </div>
</section>

---
import ArticleList from './ArticleListComponent/ArticleList.astro';
import Card from './CardComponent/Card.astro';
import Contact from './ContactComponent/Contact.astro';
import CTA from './CTAComponent/CTA.astro';
import Event from './EventComponent/Event.astro';
import Heading from './HeadingComponent/Heading.astro';
import Hero from './HeroComponent/Hero.astro';
import Image from './ImageComponent/Image.astro';
import Paragraph from './ParagraphComponent/Paragraph.astro';
import Video from './VideoComponent/Video.astro';
import { ContentPayload } from '../../../../services/shared/ContentPayload';
import {
    ArticleListComponentFragment,
    DisplaySettingsFragment,
} from '../../../../services/graphql/__generated/sdk';
interface Props {
    contentPayload: ContentPayload;
    data: any;
}

const { contentPayload, data } = Astro.props as Props;
const { component, displaySettings, displayTemplateKey } = data;
const componentType = component._metadata.types[0];
---

{
    componentType === 'HeadingComponent' && (
        <Heading
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
{
    componentType === 'CTAComponent' && (
        <CTA
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
{
    componentType === 'ImageComponent' && (
        <Image
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
{
    componentType === 'VideoComponent' && (
        <Video
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
{
    componentType === 'ParagraphComponent' && (
        <Paragraph
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
{
    componentType === 'ContactComponent' && (
        <Contact
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
{
    componentType === 'EventComponent' && (
        <Event
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
{
    componentType === 'CardComponent' && (
        <Card
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
            displayTemplateKey={displayTemplateKey}
        />
    )
}
{
    componentType === 'HeroComponent' && (
        <Hero
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
{
    componentType === 'ArticleListComponent' && (
        <ArticleList
            contentPayload={contentPayload}
            data={component}
            displaySettings={displaySettings}
        />
    )
}
